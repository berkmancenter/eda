// Ajax turning from: https://github.com/blasten/turn.js/blob/master/demos/bible/index.html

var targetAspectRatio = 0.62;

$(function() { 
    function addPage(images, page, book) {
        // 	First check if the page is already in the book
        if (!book.turn('hasPage', page)) {
            // Create an element for this page
            var element = $('<div />', {'class': 'page '+((page%2==0) ? 'odd' : 'even'), 'id': 'page-'+page}).html('<i class="loader"></i>');
            // If not then add the page
            book.turn('addPage', element, page);

            element.html($('<img />', {'src': fullImageUrl(images[page - 1].imageFilename), 'data-page-url': images[page - 1].linkUrl}));
        }
    }

    function fullImageUrl(filename, width, height) {
        height = height || imageHeight;
        width = width || imageWidth;
        var imageUrlTemplate = "<%= Eda::Application.config.emily['image_host'] %>?FIF=<%= Eda::Application.config.emily['image_directory'] %>/{image_filename}.tif&WID={width}&HEI={height}&CVT=jpeg";
        return imageUrlTemplate.replace('{image_filename}', filename)
    .replace('{width}', Math.round(width))
    .replace('{height}', Math.round(height));
    }

    var sbsPages = $( ".sbs-pages" );

    if ( sbsPages.length > 0 ) {
        var imageHeight = ($(window).height() - $('header').height() - $('footer').height() - $('section.side-by-side > h2').height()) * 0.82;
        var imageWidth = imageHeight * targetAspectRatio;

        // Event handlers
        $('.side-by-side #next-page').on('click', function() { sbsPages.turn('next'); });
        $('.side-by-side #previous-page').on('click', function() { sbsPages.turn('previous'); });

        // Make controls prettier
        //$('.page-controls div').css({margin: '0.2em 0 0', width: imageWidth + 'px'}).find('a').css('margin', 0);
        $('.page-links>div').not('.page-counter-container').css({width: (imageWidth-64) + 'px'});

        $( window ).on( 'resize', function( ) {
          $('.page-links>div').not('.page-counter-container').css({width: (imageWidth-64) + 'px'});
        } );

        $('.total-pages').html(numberOfPages);
        var page;
        if ( $.isNumeric( $.url().param('page') ) ) {
            page = parseInt( $.url().param('page') );
        }

        sbsPages.turn({
            acceleration: true,
            pages: numberOfPages,
            elevation: 50,
            gradients: !$.isTouch,
            page: page,
            height: imageHeight,
            width: Math.round(imageWidth * 1.95),
            when: {
                turning: function(e, page, view) {
                    // Gets the range of pages that the book needs right now
                    var range = $(this).turn('range', page);

                    // Check if each page is within the book
                    for (page = range[0]; page<=range[1]; page++) 
                        addPage(images, page, $(this));

                },
                turned: function(e, page, view) {
                    if (page > 1 && page < numberOfPages) {
                        page = (page % 2 == 0) ? page + ', ' + (page + 1) : (page - 1) + ', ' + page;
                    }
                    view.forEach(function(page, i) { 
                        var url = $('#page-' + page + ' img').data('page-url');
                        var link = $('<a />', { href: url, title: 'View the Manuscript for this Page' });
                        if (url == '' || page == 0) { link = ''; }
                        if (page % 2 == 0) { 
                            $('.left-image-link').html(link);
                        } else {
                            $('.right-image-link').html(link);
                        }
                    });
                    $('.current-page-number').html(page);
                }
            }
        });

    }
});
